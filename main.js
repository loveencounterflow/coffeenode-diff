// Generated by CoffeeScript 1.8.0
(function() {
  var TRM, diff_match_patch, docopt, green, options, red, usage, white;

  TRM = require('coffeenode-trm');

  red = TRM.RED.bind(TRM);

  white = TRM.white.bind(TRM);

  green = TRM.GREEN.bind(TRM);


  /* https://github.com/shimondoodkin/googlediff */

  diff_match_patch = require('googlediff');

  this._new_diff = function(text_1, text_2) {
    var R, d, dmp;
    dmp = new diff_match_patch();
    d = dmp.diff_main(text_1, text_2);
    R = {
      dmp: dmp,
      d: d
    };
    return R;
  };

  this._cleanup = function(me) {
    var d, dmp;
    d = me.d, dmp = me.dmp;
    dmp.Diff_EditCost = 10;
    dmp.diff_cleanupSemantic(d);
    dmp.diff_cleanupEfficiency(d);
    return me;
  };

  this.analyze = function(text_1, text_2) {
    var d, dmp, _ref;
    _ref = this._cleanup(this._new_diff(text_1, text_2)), d = _ref.d, dmp = _ref.dmp;
    return d;
  };

  this.colorize = function(text_1, text_2) {
    var R, action, part, text, _i, _len, _ref;
    R = [];
    _ref = this.analyze(text_1, text_2);
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      part = _ref[_i];
      action = part[0], text = part[1];
      R.push((this._get_color(action))(text));
    }
    return R.join('');
  };

  this._get_color = function(action) {
    if (action === -1) {
      return red;
    }
    if (action === 0) {
      return white;
    }
    if (action === +1) {
      return green;
    }
  };

  this._main = function(options) {
    var log, njs_fs;
    njs_fs = require('fs');
    log = console.log;
    console.log(options);
    return njs_fs.readFile(options['<file_1>'], {
      encoding: 'utf-8'
    }, (function(_this) {
      return function(error, text_1) {
        if (error != null) {
          throw error;
        }
        return njs_fs.readFile(options['<file_2>'], {
          encoding: 'utf-8'
        }, function(error, text_2) {
          if (error != null) {
            throw error;
          }
          white = TRM.grey.bind(TRM);
          return console.log(_this.colorize(text_1, text_2));
        });
      };
    })(this));
  };

  if (module.parent == null) {
    docopt = (require('docopt')).docopt;
    usage = "Usage: diff <file_1> <file_2>\n\nOptions:\n  -h, --help\n  -v, --version";
    options = docopt(usage, {
      version: (require('./package.json'))['version']
    });
    this._main(options);
  }

}).call(this);
